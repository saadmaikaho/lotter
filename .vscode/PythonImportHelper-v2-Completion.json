[
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "register_tortoise",
        "importPath": "tortoise.contrib.fastapi",
        "description": "tortoise.contrib.fastapi",
        "isExtraImport": true,
        "detail": "tortoise.contrib.fastapi",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "string",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "string",
        "description": "string",
        "detail": "string",
        "documentation": {}
    },
    {
        "label": "uvicorn",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uvicorn",
        "description": "uvicorn",
        "detail": "uvicorn",
        "documentation": {}
    },
    {
        "label": "LotteryTicket",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "fields",
        "importPath": "tortoise",
        "description": "tortoise",
        "isExtraImport": true,
        "detail": "tortoise",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "tortoise",
        "description": "tortoise",
        "isExtraImport": true,
        "detail": "tortoise",
        "documentation": {}
    },
    {
        "label": "LotteryTicket_Pydantic",
        "kind": 6,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "class LotteryTicket_Pydantic(BaseModel):\n    ticket_code: str\n# Route to get all tickets\n@app.get(\"/tickets/\", response_model=List[LotteryTicket_Pydantic])\nasync def get_tickets():\n    return await LotteryTicket_Pydantic.from_queryset(LotteryTicket.all())\n# Route to generate a new ticket\n@app.post(\"/generate_ticket/\")\nasync def generate_ticket():\n    ticket_code = ''.join(random.choices(string.ascii_uppercase + string.digits, k=10))",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "get_random_result",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def get_random_result():\n    prizes = [\"谢谢参与\", \"300\", \"600\", \"900\", \"1500\", \"3000\", \"8800\", \"再来一次\"]\n    probabilities = [0.10, 0.36, 0.25, 0.10, 0.5, 0.03, 0.01, 0.10]\n    return random.choices(prizes, probabilities)[0]\n# Run the FastAPI application\nif __name__ == \"__main__\":\n    uvicorn.run(\"main:app\")",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "app = FastAPI()\n# Database initialization\nregister_tortoise(\n    app,\n    db_url='sqlite://data/db.sqlite3',\n    modules={'models': ['models']},\n    generate_schemas=True,\n    add_exception_handlers=True,\n)\n# Pydantic model for LotteryTicket",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "LotteryTicket",
        "kind": 6,
        "importPath": "models",
        "description": "models",
        "peekOfCode": "class LotteryTicket(models.Model):\n    id = fields.IntField(pk=True)\n    ticket_code = fields.CharField(max_length=50, unique=True)\n    result = fields.CharField(max_length=50, null=True)\n    used = fields.BooleanField(default=False)\n    use_count = fields.IntField(default=0)  # 新增字段，表示使用次数\nclass AdminUser(models.Model):\n    id = fields.IntField(pk=True)\n    username = fields.CharField(max_length=20, unique=True)\n    password = fields.CharField(max_length=128)  # 直接存储明文密码",
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "AdminUser",
        "kind": 6,
        "importPath": "models",
        "description": "models",
        "peekOfCode": "class AdminUser(models.Model):\n    id = fields.IntField(pk=True)\n    username = fields.CharField(max_length=20, unique=True)\n    password = fields.CharField(max_length=128)  # 直接存储明文密码\n    @classmethod\n    async def create_admin(cls):\n        username = \"saaduu123\"\n        password = \"saaduu@123\"\n        existing_user = await cls.get_or_none(username=username)\n        if existing_user is None:",
        "detail": "models",
        "documentation": {}
    }
]