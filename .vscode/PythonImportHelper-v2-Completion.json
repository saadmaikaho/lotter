[
    {
        "label": "fields",
        "importPath": "tortoise",
        "description": "tortoise",
        "isExtraImport": true,
        "detail": "tortoise",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "tortoise",
        "description": "tortoise",
        "isExtraImport": true,
        "detail": "tortoise",
        "documentation": {}
    },
    {
        "label": "LotteryTicket",
        "kind": 6,
        "importPath": "models",
        "description": "models",
        "peekOfCode": "class LotteryTicket(models.Model):\n    id = fields.IntField(pk=True)\n    ticket_code = fields.CharField(max_length=50, unique=True)\n    result = fields.CharField(max_length=50, null=True)\n    used = fields.BooleanField(default=False)\n    use_count = fields.IntField(default=0)  # 新增字段，表示使用次数\nclass AdminUser(models.Model):\n    id = fields.IntField(pk=True)\n    username = fields.CharField(max_length=20, unique=True)\n    password = fields.CharField(max_length=128)  # 直接存储明文密码",
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "AdminUser",
        "kind": 6,
        "importPath": "models",
        "description": "models",
        "peekOfCode": "class AdminUser(models.Model):\n    id = fields.IntField(pk=True)\n    username = fields.CharField(max_length=20, unique=True)\n    password = fields.CharField(max_length=128)  # 直接存储明文密码\n    @classmethod\n    async def create_admin(cls):\n        username = \"saaduu123\"\n        password = \"saaduu@123\"\n        existing_user = await cls.get_or_none(username=username)\n        if existing_user is None:",
        "detail": "models",
        "documentation": {}
    }
]